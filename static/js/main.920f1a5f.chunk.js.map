{"version":3,"sources":["Object-Content.js","components/Options.js","components/Clock.js","components/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["buttonFields","id","name","timeFields","variable","fontFields","font","colorFields","color","defaultSettings","clockState","pomodoro","minutes","seconds","shortBreak","longBreak","button","settingState","defaultClockStatus","defaultProgressBar","progressBarStart","Options","values","setValues","setStopClock","buttonMapping","setProgressBar","map","onClick","value","data","buttonStateUpdate","className","style","fontFamily","backgroundColor","transform","Clock","toggleSettings","stopClock","clockStatus","setClockStatus","progressBar","useInterval","input","stop","clock","totalSeconds","incrementPomodoro","incrementShortBreak","incrementLongBreak","clockCounter","autoStart","immediate","selfCorrecting","start","styleStatusText","status","text","document","querySelector","type","onMouseOver","onMouseOut","height","width","cx","cy","r","stroke","strokeLinecap","strokeDashoffset","state","clockTimeDisplayMinutes","clockTimeDisplaySeconds","Settings","settingsModalToggler","fieldCheck","setFieldCheck","valuestateUpdate","Number","timeFieldsMapping","field","onChange","e","target","fontFieldsMapping","colorFieldsMapping","SavedSettings","console","log","JsonSavedSettings","JSON","stringify","localStorage","setItem","toggleApplyButton","App","storedSettings","parse","getItem","storedOutput","useState","setToggleSettings","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.920f1a5f.chunk.js","sourcesContent":["export const buttonFields = [\r\n    {\r\n        id: 1,\r\n        name: 'pomodoro'     \r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'short break'    \r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'long break'   \r\n    },\r\n]\r\n\r\nexport const timeFields = [\r\n    {\r\n        id: 1,\r\n        name: 'pomodoro',\r\n        variable: 'pomodoro'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'short break',\r\n        variable: 'shortBreak'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'long break',\r\n        variable: 'longBreak'\r\n    }\r\n]\r\n\r\nexport const fontFields = [\r\n    {\r\n        id: 1,\r\n        font: 'Kumbh Sans'\r\n    },\r\n    {\r\n        id: 2,\r\n        font: 'Roboto Slab'\r\n    },\r\n    {\r\n        id: 3,\r\n        font: 'Space Mono'\r\n    }\r\n]\r\n\r\nexport const colorFields = [\r\n    {\r\n        id: 1,\r\n        color: '#F87070'\r\n    },\r\n    {\r\n        id: 2,\r\n        color: '#70F3F8'\r\n    },\r\n    {\r\n        id: 3,\r\n        color: '#D881F8'\r\n    }\r\n]\r\n\r\nexport const defaultSettings = {\r\n    clockState: {\r\n        pomodoro: [\r\n            {\r\n                minutes: 10,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        shortBreak: [\r\n            {\r\n                minutes: 1,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        longBreak: [\r\n            {\r\n                minutes: 2,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        font: 'Kumbh Sans',\r\n        color: '#F87070',\r\n        button: 'pomodoro'\r\n    },\r\n    settingState: {\r\n        pomodoro: [\r\n            {\r\n                minutes: 10,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        shortBreak: [\r\n            {\r\n                minutes: 1,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        longBreak: [\r\n            {\r\n                minutes: 2,\r\n                seconds: 0\r\n            }\r\n        ],\r\n        font: 'Kumbh Sans',\r\n        color: '#F87070',\r\n        button: 'pomodoro'\r\n    }\r\n\r\n}\r\n\r\nexport const defaultClockStatus = {\r\n    pomodoro: 'START',\r\n    shortBreak: 'START',\r\n    longBreak: 'START'\r\n}\r\n\r\nexport const defaultProgressBar = {\r\n    pomodoro: 0,\r\n    shortBreak: 0,\r\n    longBreak: 0\r\n}\r\n\r\nexport const progressBarStart = 300;","import { buttonFields } from '../Object-Content.js';\r\n\r\nconst Options = ({ values, setValues, setStopClock, setProgressBar }) => {\r\n\r\n    const buttonStateUpdate = (value) => {\r\n        let data = values.clockState;\r\n        data.button = value;\r\n        setValues({...values, clockState: data})\r\n    }\r\n    \r\n    const buttonMapping = buttonFields.map(button => {\r\n        return (\r\n            <div key={button.id} \r\n                onClick={() => { buttonStateUpdate(button.name); setStopClock(true)}}\r\n                className='option-button-container pointer'>\r\n                    <h2 style={{ fontFamily: values.clockState.font }}\r\n                        className={values.clockState.button === button.name ? `button-active-text` : ``}>{button.name}</h2>\r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div className='options-container'>\r\n            {buttonMapping}\r\n            <div className=\"option-button-highlight\"\r\n                style={{ backgroundColor: values.clockState.color, \r\n                    transform: `${values.clockState.button === 'pomodoro' ? `translateX(-115%)` \r\n                    : values.clockState.button === 'short break' ? `translateX(0%)` \r\n                    : `translateX(115%)`}`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","import { useInterval } from 'react-interval-hook';\r\nimport { progressBarStart } from '../Object-Content';\r\n\r\nconst Clock = ({ values, setValues, toggleSettings, \r\n    stopClock, setStopClock, clockStatus, setClockStatus,\r\n    progressBar, setProgressBar }) => {\r\n    \r\n    const clockCounter = (input) => {\r\n        if (stopClock || toggleSettings) {\r\n            stop(true);\r\n            if (clockStatus.pomodoro === 'PAUSE') {\r\n                setClockStatus({...clockStatus, pomodoro: 'RESUME'});\r\n            } \r\n            if (clockStatus.shortBreak === 'PAUSE') {\r\n                setClockStatus({...clockStatus, shortBreak: 'RESUME'});\r\n            } \r\n            if (clockStatus.longBreak === 'PAUSE') {\r\n                setClockStatus({...clockStatus, longBreak: 'RESUME'});\r\n            }\r\n            setStopClock(false);\r\n            return;\r\n        }\r\n        const clock = input === 'pomodoro' ? values.clockState.pomodoro[0]\r\n                        : input === 'short break' ? values.clockState.shortBreak[0]\r\n                        : values.clockState.longBreak[0];\r\n        if (clock.minutes === 0 && clock.seconds === 0) {\r\n            stop(true);\r\n            if (input === 'pomodoro') {\r\n                setClockStatus({...clockStatus, pomodoro: 'RESTART'});\r\n                setProgressBar({...progressBar, pomodoro: 0});\r\n            } else if (input === 'short break') {\r\n                setClockStatus({...clockStatus, shortBreak: 'RESTART'});\r\n                setProgressBar({...progressBar, shortBreak: 0});\r\n            } else {\r\n                setClockStatus({...clockStatus, longBreak: 'RESTART'});\r\n                setProgressBar({...progressBar, longBreak: 0});\r\n            }\r\n            return;\r\n        } else if (clock.minutes >= 1 && clock.seconds === 0) {\r\n            if (input === 'pomodoro') {\r\n                setValues({...values, clockState: {...values.clockState, pomodoro: [{...values.clockState.pomodoro[0], minutes: values.clockState.pomodoro[0].minutes - 1, seconds: 59}]}})\r\n            } else if (input === 'short break') {\r\n                setValues({...values, clockState: {...values.clockState, shortBreak: [{...values.clockState.shortBreak[0], minutes: values.clockState.shortBreak[0].minutes - 1, seconds: 59}]}})\r\n            } else {\r\n                setValues({...values, clockState: {...values.clockState, longBreak: [{...values.clockState.longBreak[0], minutes: values.clockState.longBreak[0].minutes - 1, seconds: 59}]}})\r\n            }    \r\n        } else {\r\n            if (input === 'pomodoro') {\r\n                setValues({...values, clockState: {...values.clockState, pomodoro: [{...values.clockState.pomodoro[0], seconds: values.clockState.pomodoro[0].seconds - 1}]}})\r\n            } else if (input === 'short break') {\r\n                setValues({...values, clockState: {...values.clockState, shortBreak: [{...values.clockState.shortBreak[0], seconds: values.clockState.shortBreak[0].seconds - 1}]}})\r\n            } else {\r\n                setValues({...values, clockState: {...values.clockState, longBreak: [{...values.clockState.longBreak[0], seconds: values.clockState.longBreak[0].seconds - 1}]}})\r\n            }\r\n        }\r\n        const totalSeconds = (clock.minutes * 60) + clock.seconds;\r\n        if (input === 'pomodoro') {\r\n            const incrementPomodoro = progressBar.pomodoro / totalSeconds;\r\n            setProgressBar({...progressBar, pomodoro: progressBar.pomodoro - incrementPomodoro});\r\n        } else if (input === 'short break') {\r\n            const incrementShortBreak = progressBar.shortBreak / totalSeconds;\r\n            setProgressBar({...progressBar, shortBreak: progressBar.shortBreak - incrementShortBreak});\r\n        } else {\r\n            const incrementLongBreak = progressBar.longBreak / totalSeconds;\r\n            setProgressBar({...progressBar, longBreak: progressBar.longBreak - incrementLongBreak});\r\n        }\r\n    }\r\n\r\n    const { start, stop } = useInterval(\r\n        () => { clockCounter(values.clockState.button === 'pomodoro' ? 'pomodoro'\r\n                            : values.clockState.button === 'short break' ? 'short break'\r\n                            : 'long break');\r\n        }, 1000,\r\n        {\r\n            autoStart: false,\r\n            immediate: false,\r\n            selfCorrecting: false,\r\n        }\r\n    );\r\n\r\n    const clockStarterStopper = (type) => {\r\n        if (type === 'pomodoro') {\r\n            if (clockStatus.pomodoro === 'START') {\r\n                setClockStatus({...clockStatus, pomodoro: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, pomodoro: progressBarStart});\r\n            } else if (clockStatus.pomodoro === 'PAUSE') {\r\n                setClockStatus({...clockStatus, pomodoro: 'RESUME'});\r\n                stop(true);\r\n            } else if (clockStatus.pomodoro === 'RESUME') {\r\n                setClockStatus({...clockStatus, pomodoro: 'PAUSE'});\r\n                start(true);\r\n            } else if (clockStatus.pomodoro === 'RESTART') {\r\n                setValues({...values, clockState: {...values.clockState, pomodoro: [{...values.settingState.pomodoro[0]}]}})\r\n                setClockStatus({...clockStatus, pomodoro: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, pomodoro: progressBarStart});\r\n            }\r\n        } else if (type === 'short break') {\r\n            if (clockStatus.shortBreak === 'START') {\r\n                setClockStatus({...clockStatus, shortBreak: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, shortBreak: progressBarStart});\r\n            } else if (clockStatus.shortBreak === 'PAUSE') {\r\n                setClockStatus({...clockStatus, shortBreak: 'RESUME'});\r\n                stop(true);\r\n            } else if (clockStatus.shortBreak === 'RESUME') {\r\n                setClockStatus({...clockStatus, shortBreak: 'PAUSE'});\r\n                start(true);\r\n            } else if (clockStatus.shortBreak === 'RESTART') {\r\n                setValues({...values, clockState: {...values.clockState, shortBreak: [{...values.settingState.shortBreak[0]}]}})\r\n                setClockStatus({...clockStatus, shortBreak: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, shortBreak: progressBarStart});\r\n            }\r\n        } else if (type === 'long break') {\r\n            if (clockStatus.longBreak === 'START') {\r\n                setClockStatus({...clockStatus, longBreak: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, longBreak: progressBarStart});\r\n            } else if (clockStatus.longBreak === 'PAUSE') {\r\n                setClockStatus({...clockStatus, longBreak: 'RESUME'});\r\n                stop(true);\r\n            } else if (clockStatus.longBreak === 'RESUME') {\r\n                setClockStatus({...clockStatus, longBreak: 'PAUSE'});\r\n                start(true);\r\n            } else if (clockStatus.longBreak === 'RESTART') {\r\n                setValues({...values, clockState: {...values.clockState, longBreak: [{...values.settingState.longBreak[0]}]}})\r\n                setClockStatus({...clockStatus, longBreak: 'PAUSE'});\r\n                start(true);\r\n                setProgressBar({...progressBar, longBreak: progressBarStart});\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const clockTimeDisplayMinutes = () => {\r\n        const state = values.clockState\r\n        const minutes = state.button === 'pomodoro' \r\n            ? state.pomodoro[0].minutes \r\n            : state.button === 'short break' ? state.shortBreak[0].minutes\r\n            : state.longBreak[0].minutes\r\n        const minOutput = minutes < 10 ? `0${minutes}` : minutes\r\n        return minOutput;\r\n    }\r\n\r\n    const clockTimeDisplaySeconds = () => {\r\n        const state = values.clockState\r\n        const seconds = state.button === 'pomodoro' \r\n            ? state.pomodoro[0].seconds\r\n            : state.button === 'short break' ? state.shortBreak[0].seconds\r\n            : state.longBreak[0].seconds\r\n        const secOutput = seconds < 10 ? `0${seconds}` \r\n        : seconds\r\n        return secOutput;\r\n    }\r\n\r\n    const clockStatusDisplay = () => {\r\n        const data = values.clockState.button === 'pomodoro' ? clockStatus.pomodoro\r\n                        : values.clockState.button === 'short break' ? clockStatus.shortBreak\r\n                        : clockStatus.longBreak\r\n        return data;\r\n    }\r\n\r\n    const styleStatusText = (status) => {\r\n        const text = document.querySelector('h4');\r\n        status === 'on' ? text.style.color = values.clockState.color \r\n            : text.style.color = '#D7E0FF'\r\n    }\r\n\r\n    return (\r\n        <div className='clock-body-outer-container'>\r\n            <div onClick={() => { clockStarterStopper(values.clockState.button);\r\n                    styleStatusText('off')} }\r\n                onMouseOver={() => styleStatusText('on')} \r\n                onMouseOut={() => styleStatusText('off')}\r\n                className=\"clock-body-inner-container pointer\">\r\n                <div className=\"progress-bar-container\">\r\n                    <svg height=\"100%\" width=\"100%\">\r\n                        <circle cx=\"50%\" cy=\"50%\" r=\"48%\" stroke={values.clockState.color}\r\n                            strokeLinecap=\"round\"\r\n                            strokeDashoffset={\r\n                                values.clockState.button === 'pomodoro' ? `${progressBar.pomodoro}%`\r\n                                : values.clockState.button === 'short break' ? `${progressBar.shortBreak}%`\r\n                                : `${progressBar.longBreak}%`\r\n                            }>\r\n                        </circle>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"clock-numbers-container\">\r\n                    <h3 style={{fontFamily: values.clockState.font, \r\n                            transform: values.clockState.font === 'Space Mono' ? `scale(0.9)` : `scale(1)`}}>\r\n                            <span>{clockTimeDisplayMinutes()}</span>:<span>{clockTimeDisplaySeconds()}</span>\r\n                    </h3>\r\n                    <h4 style={{fontFamily: values.clockState.font }}>{clockStatusDisplay()}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock","import { timeFields, fontFields, colorFields, \r\n    defaultClockStatus, defaultProgressBar } from '../Object-Content';\r\n\r\nconst Settings = ({ values, setValues, settingsModalToggler,\r\n        setClockStatus, setProgressBar, toggleSettings, \r\n        fieldCheck, setFieldCheck }) => {\r\n\r\n    const valuestateUpdate = (name, value) => {\r\n        switch(name) {\r\n            case 'pomodoro':\r\n                if (value < 0 || value > 99) {\r\n                    setValues({...values, settingState: {...values.settingState, pomodoro: [{...values.settingState.pomodoro[0], minutes: 0}]}})\r\n                    break;\r\n                }\r\n                setValues({...values, settingState: {...values.settingState, pomodoro: [{...values.settingState.pomodoro[0], minutes: Number(value)}]}})\r\n                break;\r\n            case 'increment.pomodoro':\r\n                if (values.settingState.pomodoro[0].minutes >= 99) {\r\n                    break;\r\n                }\r\n                setValues({...values, settingState: {...values.settingState, pomodoro: [{...values.settingState.pomodoro[0], minutes: values.settingState.pomodoro[0].minutes + 1}]}})\r\n                break;\r\n            case 'decrement.pomodoro':\r\n                if (values.settingState.pomodoro[0].minutes <= 1) {\r\n                    setValues({...values, settingState: {...values.settingState, pomodoro: [{...values.settingState.pomodoro[0], minutes: 1}]}})\r\n                    break;\r\n                } else {\r\n                    setValues({...values, settingState: {...values.settingState, pomodoro: [{...values.settingState.pomodoro[0], minutes: values.settingState.pomodoro[0].minutes - 1}]}})\r\n                    break;\r\n                }\r\n            case 'shortBreak':\r\n                setValues({...values, settingState: {...values.settingState, shortBreak: [{...values.settingState.shortBreak[0], minutes: Number(value)}]}})\r\n                if (value < 0) {\r\n                    setValues({...values, settingState: {...values.settingState, shortBreak: [{...values.settingState.shortBreak[0], minutes: 0}]}})\r\n                    break;\r\n                }\r\n                break;\r\n            case 'increment.shortBreak':\r\n                if (values.settingState.shortBreak[0].minutes >= 99) {\r\n                    break;\r\n                }\r\n                setValues({...values, settingState: {...values.settingState, shortBreak: [{...values.settingState.shortBreak[0], minutes: values.settingState.shortBreak[0].minutes + 1}]}})\r\n                break;\r\n            case 'decrement.shortBreak':\r\n                if (values.settingState.shortBreak[0].minutes <= 1) {\r\n                    setValues({...values, settingState: {...values.settingState, shortBreak: [{...values.settingState.shortBreak[0], minutes: 1}]}})\r\n                    break;\r\n                } else {\r\n                    setValues({...values, settingState: {...values.settingState, shortBreak: [{...values.settingState.shortBreak[0], minutes: values.settingState.shortBreak[0].minutes - 1}]}})\r\n                }\r\n                break;\r\n            case 'longBreak':\r\n                setValues({...values, settingState: {...values.settingState, longBreak: [{...values.settingState.longBreak[0], minutes: Number(value)}]}})\r\n                if (value < 0) {\r\n                    setValues({...values, settingState: {...values.settingState, longBreak: [{...values.settingState.longBreak[0], minutes: 0}]}})\r\n                    break;\r\n                }\r\n                break;\r\n            case 'increment.longBreak':\r\n                if (values.settingState.longBreak[0].minutes >= 99) {\r\n                    break;\r\n                }\r\n                setValues({...values, settingState: {...values.settingState, longBreak: [{...values.settingState.longBreak[0], minutes: values.settingState.longBreak[0].minutes + 1}]}})\r\n                break;\r\n            case 'decrement.longBreak':\r\n                if (values.settingState.longBreak[0].minutes <= 1) {\r\n                    setValues({...values, settingState: {...values.settingState, longBreak: [{...values.settingState.longBreak[0], minutes: 1}]}})\r\n                    break;\r\n                } else {\r\n                    setValues({...values, settingState: {...values.settingState, longBreak: [{...values.settingState.longBreak[0], minutes: values.settingState.longBreak[0].minutes - 1}]}})\r\n                } \r\n                break;\r\n            case 'font':\r\n                setValues({...values, settingState: {...values.settingState, font: value}})\r\n                break;\r\n            case 'color':\r\n                setValues({...values, settingState: {...values.settingState, color: value}})\r\n                break;\r\n            default:\r\n                break;\r\n        }  \r\n    }\r\n\r\n    const valuesHeader = () => {\r\n        return (\r\n            <div className=\"header-container\">\r\n                <h4>Settings</h4>\r\n                <div onClick={() => settingsModalToggler(false)}\r\n                    className=\"closing-icon-container pointer\">\r\n                    <div className=\"closing-icon\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const timeFieldsMapping = timeFields.map(field => {\r\n        return (\r\n            <div key={field.id} className=\"d-flex\">\r\n                <div key={field.id} className=\"number-row-container d-md-flex flex-md-column\">\r\n                    <h6>{field.name}</h6>\r\n                    <h6 className={fieldCheck && (field.id === 1 ? values.settingState.pomodoro[0].minutes === 0\r\n                        : field.id === 2 ? values.settingState.shortBreak[0].minutes === 0\r\n                        : values.settingState.longBreak[0].minutes === 0) \r\n                        ? `field-error-text` : `d-none`}>\r\n                            Can't be 0\r\n                    </h6>\r\n                    <div className={`${fieldCheck && (field.id === 1 ? values.settingState.pomodoro[0].minutes === 0\r\n                        : field.id === 2 ? values.settingState.shortBreak[0].minutes === 0\r\n                        : values.settingState.longBreak[0].minutes === 0) \r\n                        ? `field-error-border` : ``}\r\n                        number-value-container mt-md-2`}>\r\n                        <input type=\"text\" \r\n                            name={field.variable}\r\n                            value={field.id === 1 ? values.settingState.pomodoro[0].minutes\r\n                                    : field.id === 2 ? values.settingState.shortBreak[0].minutes\r\n                                    : values.settingState.longBreak[0].minutes}\r\n                            onChange={(e) => valuestateUpdate(e.target.name, e.target.value)}\r\n                            className=\"text-field-placement\" \r\n                        />\r\n                        <div className=\"text-field-arrows-container\">\r\n                            <div className=\"text-field-up-icon\">\r\n                                <div onClick ={() => valuestateUpdate(`increment.${field.variable}`)}\r\n                                    className=\"text-field-arrow-filler-up pointer\"></div>\r\n                            </div>\r\n                            <div className=\"text-field-down-icon\">\r\n                                <div onClick ={() => valuestateUpdate(`decrement.${field.variable}`)}\r\n                                    className=\"text-field-arrow-filler-down pointer\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {field.id !== 3 &&\r\n                    <div className=\"d-none d-md-block field-side-gap-filler\"></div>\r\n                }\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const fontFieldsMapping = fontFields.map(font => {\r\n        return (\r\n            <div key={font.id} \r\n                onClick ={() => valuestateUpdate('font', font.font)}\r\n                className={`${values.settingState.font === font.font && `active-font`} \r\n                    f${font.id} font-circle-container pointer`}>\r\n                    <p>Aa</p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const colorFieldsMapping = colorFields.map(color => {\r\n        return (\r\n            <div key={color.id} \r\n                onClick ={() => valuestateUpdate('color', color.color)}\r\n                className={`c${color.id} circle-container pointer`}>\r\n                    {values.settingState.color === color.color && \r\n                        <div className=\"circle-checked\"></div>\r\n                    }\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const toggleApplyButton = () => {\r\n        if (values.settingState.pomodoro[0].minutes === 0 \r\n            || values.settingState.shortBreak[0].minutes === 0\r\n            || values.settingState.longBreak[0].minutes === 0) {\r\n            setFieldCheck(true);\r\n            return\r\n        }\r\n        setFieldCheck(false);\r\n        setValues({...values, clockState: values.settingState});\r\n        const SavedSettings = values.settingState;\r\n        console.log(SavedSettings);\r\n        const JsonSavedSettings = JSON.stringify(SavedSettings);\r\n        localStorage.setItem(\"SavedSettings\", JsonSavedSettings);\r\n        setClockStatus(defaultClockStatus);\r\n        settingsModalToggler(false);\r\n        setProgressBar(defaultProgressBar);\r\n    }\r\n\r\n    return (\r\n        <div className={`${toggleSettings && `modal-animation`} settings-modal-container`}>\r\n            {valuesHeader()}\r\n            <div className=\"section-settings-container\">\r\n                <h5 className=\"time-heading-adjust\">TIME (MINUTES)</h5>\r\n                <div className=\"w-100 d-md-flex flex-md-row\">\r\n                {timeFieldsMapping}\r\n                </div>\r\n                <div className=\"field-bottom-filler\"></div>\r\n            </div>\r\n            <div className=\"section-font-container d-md-flex flex-md-row \r\n                justify-content-md-between align-items-md-center\">\r\n                <h5>FONT</h5>\r\n                <div className=\"d-flex w-50 w-32 justify-content-between\">\r\n                    {fontFieldsMapping}\r\n                </div>\r\n                <div className=\"field-bottom-filler d-md-none\"></div>\r\n            </div>\r\n            <div className=\"section-color-container d-md-flex flex-md-row\r\n                justify-content-md-between align-items-md-center\">\r\n                <h5>COLOR</h5>\r\n                <div className=\"d-flex w-50 w-32 justify-content-between mt-2\">\r\n                    {colorFieldsMapping}\r\n                </div>\r\n                <div className=\"field-bottom-filler d-md-none\"></div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div onClick={() => toggleApplyButton()}\r\n                    className=\"apply-button-container pointer\">\r\n                    <p>Apply</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import { useState } from 'react';\nimport { defaultSettings, defaultClockStatus, \n  defaultProgressBar } from './Object-Content';\nimport Options from './components/Options';\nimport Clock from './components/Clock';\nimport Settings from './components/Settings';\nimport './Sass/App.scss';\n\nconst App = () => {\n\n  const storedSettings = JSON.parse(localStorage.getItem(\"SavedSettings\"));\n  const storedOutput = {...defaultSettings, settingState: storedSettings, \n    clockState: storedSettings}\n\n  const [stopClock, setStopClock] = useState(false);\n  const [toggleSettings, setToggleSettings] = useState(false);\n  const [values, setValues] = useState(\n    storedSettings === null ? defaultSettings : storedOutput);\n  const [clockStatus, setClockStatus] = useState(defaultClockStatus);\n  const [progressBar, setProgressBar] = useState(defaultProgressBar);\n  const [fieldCheck, setFieldCheck] = useState(false);\n\n  if (stopClock) {\n    setTimeout(() => {\n      setStopClock(false)\n    }, 1250)\n  }\n\n  return (\n    <div className='viewport-container'>\n        {toggleSettings && <div className='trans-background'></div>}\n        {toggleSettings && \n          <Settings \n            settingsModalToggler={setToggleSettings} \n            setValues={setValues}\n            values={values}\n            setClockStatus={setClockStatus}\n            setProgressBar={setProgressBar}\n            toggleSettings={toggleSettings}\n            fieldCheck={fieldCheck}\n            setFieldCheck={setFieldCheck}\n          /> \n        }\n      <div className='main-container'>\n        <h1>pomodoro</h1>\n        <Options \n          values={values}\n          setValues={setValues}\n          setStopClock={setStopClock}\n          setProgressBar={setProgressBar}\n        />\n        <Clock \n          values={values}\n          setValues={setValues}\n          toggleSettings={toggleSettings}\n          stopClock={stopClock}\n          setStopClock={setStopClock}\n          clockStatus={clockStatus}\n          setClockStatus={setClockStatus}\n          progressBar={progressBar}\n          setProgressBar={setProgressBar}\n        />\n        <div onClick={() => setToggleSettings(true)}\n            className=\"settings-icon-container pointer\">\n          <div className=\"settings-icon cursor\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}